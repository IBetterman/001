#创建版本库
#创建一个目录
mkdir <filename>
#删除目录
rm -rf（向下递归删除）
rm -f (直接强行删除）
#显示当前目录，如果使用Windows，为避免错误，请确保目录名（包括父目录）不包含中文
pwd
#把这个目录变成Git可以管理的仓库
git init
#在创建的文件目录下编写文件后，告诉Git，把文件添加到仓库，一次只能添加一个
git add file
#把文件提交到仓库，一次可提交多个文件
git commit
git commit -m "输入本次提交的说明"




#版本回退
#查看历史记录
git log
git log --pretty=oneline
#回退到上个版本为HEAD^,上上个版本就是HEAD^^,此版本之后的记录会被删除
git reset --hard HEAD^
#查看文件内容
cat file
#若命令窗口没有关闭，可以找到被删除的记录的版本号，写前几位就行
git reset --hard 1094a...
#查看每一次记录
git reflog




#工作区和暂存区
工作区 git add ->暂存区（stage） git commit ->分支
#查看库的状态
git status




#管理修改
#查看工作区和版本库里面最新版本的区别
git diff HEAD -- file




#撤销修改
#把文件在工作区的修改全部撤销，就是让这个文件回到最近一次git commit 或git add的状态
git checkout -- file 
#切换到另一个分支
git checkout file
把暂存区的修改撤销掉
git reset HEAD file




#删除文件
rm file
git rm file + git commit -m"" (在版本库中删除文件）




#添加远程库
#关联一个远程库
git remote add origin git@server-name:path/repo-name.git
#第一次推送master分支的所有内容
git push -u origin master
#此后提交
git push origin master




#从远程库克隆
git clone git@github.com:IBetterman/filename.git



#创建与合并分支
#创建分支并切换到该分支
git checkout -b name 或者 git switch -c name
#创建分支
git branch name 
#切换分支
git checkout name 或者 git switch name


 
 
